{"version":3,"sources":["index.js"],"names":["console","log","updateIds","selectedMap","selectedIdsList","document","getElementById","innerHTML","forEach","value","key","listItem","createElement","textContent","appendChild","updateUrl","selectedCheckboxes","Array","from","filter","_ref","_ref2","_slicedToArray","map","_ref3","_ref4","urlParams","URLSearchParams","length","set","join","delete","newUrl","concat","window","location","pathname","toString","history","replaceState","getCheckboxes","checkboxes","search","selected","get","selectedIds","split","checkbox","includes","id","checked","addEventListener","querySelectorAll","Map"],"mappings":"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","file":"testovoe-bft-group.e31bb0bc.js","sourceRoot":"..","sourcesContent":["console.log(\"rendered\")\nconst  updateIds = (selectedMap) => {\n    const selectedIdsList = document.getElementById('selectedIds');\n    selectedIdsList.innerHTML = '';\n\n    selectedMap.forEach((value, key) => {\n        if (value) {\n            const listItem = document.createElement('li');\n            listItem.textContent = key;\n            selectedIdsList.appendChild(listItem);\n        }\n    });\n\n    updateUrl(selectedMap);\n}\n\nconst updateUrl = (selectedMap) => {\n    const selectedCheckboxes = Array.from(selectedMap)\n        .filter(([key, value]) => value)\n        .map(([key]) => key);\n\n    const urlParams = new URLSearchParams();\n    if (selectedCheckboxes.length > 0) {\n        urlParams.set('selected', selectedCheckboxes.join(','));\n    } else {\n        urlParams.delete('selected');\n    }\n\n    const newUrl = `${window.location.pathname}?${urlParams.toString()}`;\n    history.replaceState(null, '', newUrl);\n}\n\n\nconst getCheckboxes = (checkboxes, selectedMap) => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const selected = urlParams.get('selected');\n    if (selected) {\n        const selectedIds = selected.split(',');\n        checkboxes.forEach((checkbox) => {\n            if (selectedIds.includes(checkbox.id)) {\n                checkbox.checked = true;\n                selectedMap.set(checkbox.id, true);\n            } else {\n                checkbox.checked = false;\n                selectedMap.set(checkbox.id, false);\n            }\n        });\n    }\n}\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const checkboxes = document.querySelectorAll('#checkboxes input[type=\"checkbox\"]');\n    const selectedMap = new Map();\n\n    checkboxes.forEach((checkbox) => {\n        selectedMap.set(checkbox.id, checkbox.checked);\n\n        checkbox.addEventListener('change', () => {\n            selectedMap.set(checkbox.id, checkbox.checked);\n            updateIds(selectedMap);\n        });\n    });\n\n    getCheckboxes(checkboxes, selectedMap);\n    updateIds(selectedMap);\n});\n"]}